# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")

import("//foundation/resourceschedule/memmgr/memmgr.gni")

## Install memmgrservice.rc to /system/etc/init/memmgrservice.rc {{{
ohos_prebuilt_etc("memmgrservice_init") {
  if (use_musl) {
    source = "memmgrservice.cfg"
  } else {
    source = "memmgrservice.rc"
  }
  relative_install_dir = "init"
  part_name = "${memmgr_part_name}"
  subsystem_name = "${memmgr_subsystem_name}"
}
## Install memmgrservice.rc to /system/etc/init/memmgrservice.rc }}}

config("memory_memmgr_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "${memmgr_root_path}/common/include",
    "include/event/",
    "include/reclaim_priority_manager/",
    "include/kill_strategy_manager/",
    "include/reclaim_strategy_manager/",
    "include/config/",
  ]

  defines = [
  ]
}

ohos_shared_library("memmgrservice") {
  install_enable = true
  sources = [
    "src/mem_mgr_service.cpp",
    "src/event/mem_mgr_event_center.cpp",
    "src/event/app_state_callback_mem_host.cpp",
    "src/event/app_state_observer.cpp",
    "src/event/mem_mgr_event_subscriber.cpp",
    "src/event/mem_mgr_event_observer.cpp",
    "src/event/account_observer.cpp",
    "src/event/account_subscriber.cpp",
    "src/reclaim_priority_manager/reclaim_priority_manager.cpp",
    "src/reclaim_priority_manager/process_priority_info.cpp",
    "src/reclaim_priority_manager/bundle_priority_info.cpp",
    "src/reclaim_priority_manager/os_account_priority_info.cpp",
    "${memmgr_common_path}/src/kernel_interface.cpp",
  ]

  configs = [ ":memory_memmgr_config" ]

  deps = [
    # base deps
    "//utils/native/base:utils",
  ]

  external_deps = [
    # base deps
    "ipc:ipc_core",
    # deps for hilog
    "hiviewdfx_hilog_native:libhilog",
    # deps for handler
    "eventhandler:libeventhandler",
    # deps for system ability access
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    # deps for appliation state observer
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "ability_runtime:want",
    # deps for sys_event observer
    "ces_standard:cesfwk_core",
    "ces_standard:cesfwk_innerkits",
    "hisysevent_native:libhisysevent",
    # deps for os_account observer
    "os_account_standard:libaccountkits",
    "os_account_standard:os_account_innerkits"
  ]

  part_name = "${memmgr_part_name}"
  subsystem_name = "${memmgr_subsystem_name}"
}
